<template>

    <div class="modal " :class="openModal">

          <div class="modal-background"></div>

          <div class="modal-card">

            <header class="modal-card-head">

              <p class="modal-card-title">Add Phonebook </p>

              <button class="delete" aria-label="close" @click="close"></button>

            </header>

            <section class="modal-card-body">

                <!-- Content ... -->
                <div class="field">
                     <label class="label">Name</label>
                     <div class="control">
                         <input class="input" :class="{'is-danger': errors.name}" type="text" placeholder="Name" v-model="user.name">
                    </div>
                    <small v-if="errors.name" class="has-text-danger">{{ errors.name[0] }}</small>
                </div>
                <div class="field">
                     <label class="label">Phone No.</label>
                     <div class="control">
                         <input class="input" :class="{'is-danger': errors.phone}" type="text" placeholder="Phone" v-model="user.phone">
                    </div>
                    <small v-if="errors.phone" class="has-text-danger">{{ errors.phone[0] }}</small>
                </div>
                <div class="field">
                     <label class="label">E-mail</label>
                     <div class="control">
                         <input class="input" :class="{'is-danger': errors.email}" type="email" placeholder="E-mail" v-model="user.email">
                    </div>
                    <small v-if="errors.email" class="has-text-danger">{{ errors.email[0] }}</small>
                </div>

            </section>

            <footer class="modal-card-foot">

              <button class="button is-success" @click="save">Save changes</button>

              <button class="button" @click="close">Cancel</button>

            </footer>

          </div>
    </div>

</template>

<script>

export default {
    
    props: ['openModal'], 

    data() {
            
        return {
        
            user: { name: '', phone: '', email: '' },
            
            errMsg: '',
            errors: {}
        }

    }, 

    methods: {
    
        save() {

            console.log('save()...');
            console.log(this.user);
            var $vm = this;


            axios.post('/phonebook', this.user).then((response) => {
                this.close();
            })
            .catch((error) => this.errors =  error.response.data.errors)

            /** 
            axios.post('/phonebook', this.user).then(function(response) {
                    console.log('cool huh!');
                    console.log(response.data);
                    if (typeof response.data.errors !== typeof undefined ) { 
                            
                        console.log(response.data.errors);
                        var errors = response.data.errors;
                        for ( var prop in errors ) { 
                            if ( errors.hasOwnProperty(prop)) { 
                                console.log('err: ' + errors[prop]);
                            }  
                        }

                        // Object.keys(obj).forEach(function(key,index) {
                                // key: the name of the object key
                                    // index: the ordinal position of the key within the object 
                                });
                       // 
                        
                        return false;
                    } 

                    console.log('Success... close me!');
                    $vm.user = {};
                    $vm.close();
                })
                .catch(function(error) { 
                    console.log('error!!');
                    console.log(error);
                    console.log(error.response.data);   
                    $vm.errMsg = error.response.data.message; 
                    $vm.errors = error.response.data.errors; 
                    console.log('errMsg: ' + $vm.errMsg);
                    console.log('errors:');
                    console.log($vm.errors);
                });
            **/
        },
    
        close() {

            this.$emit('closeRequest');
        }
    }

    
}

</script>
